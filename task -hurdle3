Step 1: Install Git 
If you don’t have Git installed, download it from here and follow the installation instructions.

Step 2:
Create Your Project Folder
Ensure that your project is in a dedicated folder. If it's not yet organized, create a new folder and move your project files into it.

For example:

bash
Copy code
mkdir course-api-project
cd course-api-project
Step 3: 
Initialize Git in Your Project
Navigate to your project directory and initialize Git:

bash
Copy code
cd /path/to/your/project
git init
This will create a hidden .git directory in your project folder.

Step 4: 
Add All Files to Git
Stage all files in the project folder for commit:

bash
Copy code
git add .
Step 5:
Commit Your Files
Commit the staged files with a message that describes the changes:

bash
Copy code
git commit -m "Initial commit - Course API Project"
Step 6:
Create a Repository on GitHub
Log in to your GitHub account.
In the top-right corner, click the + icon, and select New repository.
Name your repository, for example, course-api.
Select either Public or Private, depending on your preference.
Click Create repository.
Step 7: Link Your Local Repository to GitHub
After creating the repository, GitHub will provide commands to connect your local repository to GitHub. Use these commands:

bash
Copy code
git remote add origin https://github.com/your-username/course-api.git
Replace your-username with your actual GitHub username.

Set the branch name to main (if it isn’t already):

bash
Copy code
git branch -M main
Step 8: Push Your Project to GitHub
Push the project to the remote repository you just created on GitHub:

bash
Copy code
git push -u origin main
Step 9: Confirm Your Upload
Visit your GitHub repository to ensure that all your files are now uploaded successfully. The repository should show the code you've committed.

Additional Steps (Optional)
If you need to add more changes, modify the code and run the following steps:
Add the changes: git add .
Commit the changes: git commit -m "Description of changes"
Push to GitHub: git push
Once completed, you can submit the GitHub repository .






